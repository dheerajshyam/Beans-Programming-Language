Grammar:
    i) Function Call Grammar:
            function_call -> object LPAREN params RPAREN
            object -> typeobject | IDENTIFIER
            typeobject -> STRING | INTEGER | FLOAT | DOUBLE
            param -> object
            params -> param params | EPSILON
        
    Start Grammar:
        start -> function_call
__________________________________________________________________________________________________________________________________________

Syntax:

    function_name(param,....)

    ** This is a single line comment.

    *** This is a multiline comment. ***

    $name = "Dheeraj Shyam"

    /*
        Data types: string, integer, float, double, bool, uinteger, ufloat, udouble
        Data type casting functions: toStr(),toInt(),toFloat(),toDouble(),toBool(),toUInt(),toUFloat(),toDouble()
        Operators:
            Arithmetic (+,_,*,/)
            Assignment (=)
            Comparision (==, !=, ===, !===)
    */

    [Val,....]

    {Key:Value}

    if(expression) then
        expression
        .
        .
        .
    else if(expression) then
        expression
        .
        .
        .
        .
    else then
        expression
        .
        .
        .
        .
    end

    while(expression) till then
        expression
        .
        .
        .
        .
    end

    for(expression1; expression2; expression3) till then
        expression
        .
        .
        .
        .
    end